{% set name = "root5" %}
{% set version = "5.34.38" %}
{% set sha256 = "2c3bda69601d94836bdd88283a6585b4774eafc813deb6aa348df0af2922c4d2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: root_v{{version}}.source.tar.gz
  url: https://root.cern.ch/download/root_v{{version}}.source.tar.gz
  sha256: {{ sha256 }}

build:
   number: 1
   skip: true  # [win]
   skip: true  # [py3k]

requirements:
 
 build:
     - cmake
#     - {{ compiler('fortran') }}
     - {{ compiler('c') }}
     - {{ compiler('cxx') }}
 host:
     - python
     - fftw
#     - cfitsio
     - mesalib
     - xorg-libxft  # [linux]
     - xorg-libxpm  # [linux]
     - xorg-libsm  # [linux]
     - jpeg
     - libpng
     - zlib
     - libxml2
     - blas
     - openblas
     - gsl
     - krb5
     - readline
     - icu

 run:
     - python
     - fftw
#     - cfitsio
     - mesalib
     - xorg-libxft  # [linux]
     - xorg-libxpm  # [linux]
     - xorg-libsm  # [linux]
     - jpeg
     - libpng
     - zlib
     - libxml2
     - blas
     - openblas
     - gsl
     - krb5
     - readline
     - icu


test:
  commands:
    - test -f ${PREFIX}/lib/root/libCore.so  # [linux]
    - test -f ${PREFIX}/lib/root/libCore.so  # [osx]
    - test -f ${PREFIX}/include/root/TROOT.h
    # NOTE: it is normal for the following to complain about missing links to
    # *.dll files of CINT. They will be found at runtime thanks to the system.rootrc
    # file which is read when ROOT starts
    # Committing these because they take too long and the Travis CI and Circle CI build
    # would time out
    #- conda inspect linkages -p $PREFIX root5  # [not win]
    #- conda inspect objects -p $PREFIX root5  # [osx]
    - root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null
    - root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null
    - root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null
    - cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null
    #- cd ${PREFIX}/share/doc/root/tutorials/fitsio && root -b -x -q FITS_tutorial1.C >& /dev/null

about:
  home: https://root.cern.ch/
  license: LGPL-2.1
  summary: 'A modular scientific software framework. It provides all the
  functionalities needed to deal with big data processing, statistical analysis,
  visualisation and storage. It is mainly written in C++ but integrated with
  other languages such as Python and R.'
  license_family: LGPL
  license_file: LICENSE

extra:
  recipe-maintainers:
    - giacomov
    - jasercion
    - Areustle
